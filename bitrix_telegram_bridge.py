from flask import Flask, request, jsonify
import requests
import os
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
BITRIX_WEBHOOK = os.getenv('BITRIX_WEBHOOK')

def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    response = requests.post(url, json=data)
    return response.json()

@app.route('/webhook/bitrix', methods=['POST'])
def bitrix_webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Bitrix24"""
    data = request.json
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–¥–µ–ª–∫–µ
    if data.get('event') == 'ONCRMDEALCOMMENTADD':
        comment_data = data.get('data', {})
        deal_id = comment_data.get('FIELDS', {}).get('ENTITY_ID')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∫–µ
        deal_url = f"{BITRIX_WEBHOOK}crm.deal.get.json"
        deal_params = {"id": deal_id}
        deal_response = requests.get(deal_url, params=deal_params)
        deal_info = deal_response.json().get('result', {})
        
        # –ü–æ–ª—É—á–∞–µ–º Telegram ID –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–æ–ª—è
        telegram_id = deal_info.get('UF_CRM_DEAL_TELEGRAM_ID')
        
        if telegram_id:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            comment_text = comment_data.get('FIELDS', {}).get('COMMENT', '')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
            message = f"üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>\n\n{comment_text}"
            send_telegram_message(telegram_id, message)
    
    return jsonify({"status": "ok"})

@app.route('/webhook/telegram', methods=['POST'])
def telegram_webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram"""
    data = request.json
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if 'message' in data:
        message = data['message']
        chat_id = message['chat']['id']
        text = message.get('text', '')
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫ —Å —ç—Ç–∏–º Telegram ID
        deals_url = f"{BITRIX_WEBHOOK}crm.deal.list.json"
        deals_params = {
            "filter[UF_CRM_DEAL_TELEGRAM_ID]": str(chat_id),
            "select": ["ID", "TITLE"]
        }
        deals_response = requests.get(deals_url, params=deals_params)
        deals = deals_response.json().get('result', [])
        
        if deals:
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–¥–µ–ª–∫—É
            deal = deals[0]
            deal_id = deal['ID']
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–¥–µ–ª–∫–µ
            comment_url = f"{BITRIX_WEBHOOK}crm.timeline.comment.add.json"
            comment_data = {
                "fields": {
                    "ENTITY_ID": deal_id,
                    "ENTITY_TYPE": "deal",
                    "COMMENT": f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:\n{text}",
                    "AUTHOR_ID": BITRIX_RESPONSIBLE_ID
                }
            }
            requests.post(comment_url, json=comment_data)
    
    return jsonify({"status": "ok"})

@app.route("/bitrix-to-telegram", methods=["POST"])
def bitrix_to_telegram():
    data = request.json
    with open("bitrix_debug.json", "w") as f:
        import json
        json.dump(data, f, indent=2)
    # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000) 